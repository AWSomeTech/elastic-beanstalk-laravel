---
# This template describes an AWS Elastic Beanstalk application based on parameters.
AWSTemplateFormatVersion: '2010-09-09'
Description:  Create an AWS Elastic Beanstalk application

Parameters:

  ProjectName:
    Description: This parameter is used as project tag value for all resources.
    Type: String
    MaxLength: 30
    MinLength: 1
    AllowedPattern: ^[A-Za-z0-9]*$
    ConstraintDescription: This parameter must contain only alphanumeric characters and numbers.

  BranchName:
    Description: This parameter is used as branch tag value for all resources.
    Type: String
    MaxLength: 30
    MinLength: 1
    AllowedPattern: ^[A-Za-z0-9]*$
    ConstraintDescription: This parameter must contain only alphanumeric characters and numbers.

  Environment:
    Description: Environment to deploy. Use staging for limited resources and no alerts.
    Type: String
    AllowedValues:
    - Staging
    - Production
    Default: Staging

  TemplateBucket:
    Description: The S3 Bucket containing AWS CloudFormation template directory.
    Type: String
    MinLength: 1
    MaxLength: 255
    Default: rabiloo

  TemplateKey:
    Description: The S3 Key for AWS CloudFormation template directory.
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: ^[A-Za-z0-9+-_]+(/[A-Za-z0-9+-_]+)*$
    Default: php-templates

  PHPVersion:
    Description: The PHP version of stack.
    Type: String
    AllowedValues:
    - php71
    - php70
    - php56
    - php55
    - php54
    Default: php71
    ConstraintDescription: Unsupported PHP version.

  VpcCidr:
    Description: The specified CIDR block address for VPC
    Type: String
    MinLength: 9
    MaxLength: 18
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Default: 10.10.0.0/16

  S3BucketName:
    Description: The name of the S3 bucket for uploading files.
    Type: String
    Default: ''

  AppKeyName:
    Description: Optional key pair of the ec2-user to establish a SSH connection to the SSH bastion instance.
    Type: AWS::EC2::KeyPair::KeyName

  AppInstanceType:
    Description: Instance type of the SSH bastion instance.
    Type: String
    Default: t2.nano

  DBSnapshot:
    Description: The identifier for the DB cluster snapshot from which you want to restore (leave blank to create an empty cluster).
    Type: String
    Default: ''

  DBInstanceType:
    Description: The instance type of database server.
    Type: String
    AllowedValues:
    - db.t2.small
    - db.t2.medium
    - db.t2.xlarge
    - db.r4.large
    - db.r4.xlarge
    - db.r4.2xlarge
    - db.r4.4xlarge
    - db.r4.8xlarge
    - db.r4.16xlarge
    Default: db.t2.small

  DBName:
    Description: The name of the database (ignored when DBSnapshotIdentifier is set, value used from snapshot).
    Type: String
    Default: ''

  DBUsername:
    Description: The master user name for the DB instance (ignored when DBSnapshotIdentifier is set, value used from snapshot).
    Type: String
    Default: dbadmin

  DBPassword:
    Description: The master password for the DB instance (ignored when DBSnapshotIdentifier is set, value used from snapshot).
    Type: String
    NoEcho: true
    Default: ''

  AlertEmail:
    Description: The email address that will receive alerts.
    Type: String

  AlertFallbackEmaill:
    Description: The email address that will receive alerts if alerts can not be delivered.
    Type: String
    Default: ''

  LogsRetentionInDays:
    Description: Specifies the number of days you want to retain log events.
    Type: Number
    Default: 14
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]

  SSHFrom:
    Description: Limit SSH access to bastion instance from a CIDR block address.
    Type: String
    MinLength: 9
    MaxLength: 18
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Default: 0.0.0.0/0

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Project Parameters
      Parameters:
      - ProjectName
      - BranchName
      - Environment

    - Label:
        default: Template Parameters
      Parameters:
      - TemplateBucket
      - TemplateKey
      - VpcCidr
      - S3BucketName
      - AppInstanceType
      - AppKeyName

    - Label:
        default: Database Parameters (MySQL)
      Parameters:
      - DBSnapshot
      - DBInstanceType
      - DBName
      - DBUsername
      - DBPassword

    - Label:
        default: Operations Parameters
      Parameters:
      - AlertEmail
      - AlertFallbackEmaill
      - SSHFrom
      - LogsRetentionInDays

Conditions:

  IsProduction: !Equals [ !Ref Environment, Production ]

Mappings:
  # Maps stack type parameter to solution stack name string
  PHPVersionMap:
    php71:
      stackName: 64bit Amazon Linux 2018.03 v2.7.1 running PHP 7.1
    php70:
      stackName: 64bit Amazon Linux 2018.03 v2.7.1 running PHP 7.0
    php56:
      stackName: 64bit Amazon Linux 2018.03 v2.7.1 running PHP 5.6
    php55:
      stackName: 64bit Amazon Linux 2018.03 v2.7.1 running PHP 5.5
    php54:
      stackName: 64bit Amazon Linux 2018.03 v2.7.1 running PHP 5.4

  Region2Principal:
    us-east-1:
      EC2Principal: ec2.amazonaws.com
      ElasticBeanstalkPrincipal: elasticbeanstalk.amazonaws.com
    us-west-2:
      EC2Principal: ec2.amazonaws.com
      ElasticBeanstalkPrincipal: elasticbeanstalk.amazonaws.com
    us-west-1:
      EC2Principal: ec2.amazonaws.com
      ElasticBeanstalkPrincipal: elasticbeanstalk.amazonaws.com
    eu-west-1:
      EC2Principal: ec2.amazonaws.com
      ElasticBeanstalkPrincipal: elasticbeanstalk.amazonaws.com
    eu-west-2:
      EC2Principal: ec2.amazonaws.com
      ElasticBeanstalkPrincipal: elasticbeanstalk.amazonaws.com
    eu-west-3:
      EC2Principal: ec2.amazonaws.com
      ElasticBeanstalkPrincipal: elasticbeanstalk.amazonaws.com
    ap-southeast-1:
      EC2Principal: ec2.amazonaws.com
      ElasticBeanstalkPrincipal: elasticbeanstalk.amazonaws.com
    ap-northeast-1:
      EC2Principal: ec2.amazonaws.com
      ElasticBeanstalkPrincipal: elasticbeanstalk.amazonaws.com
    ap-northeast-2:
      EC2Principal: ec2.amazonaws.com
      ElasticBeanstalkPrincipal: elasticbeanstalk.amazonaws.com
    ap-northeast-3:
      EC2Principal: ec2.amazonaws.com
      ElasticBeanstalkPrincipal: elasticbeanstalk.amazonaws.com
    ap-southeast-2:
      EC2Principal: ec2.amazonaws.com
      ElasticBeanstalkPrincipal: elasticbeanstalk.amazonaws.com
    ap-south-1:
      EC2Principal: ec2.amazonaws.com
      ElasticBeanstalkPrincipal: elasticbeanstalk.amazonaws.com
    us-east-2:
      EC2Principal: ec2.amazonaws.com
      ElasticBeanstalkPrincipal: elasticbeanstalk.amazonaws.com
    ca-central-1:
      EC2Principal: ec2.amazonaws.com
      ElasticBeanstalkPrincipal: elasticbeanstalk.amazonaws.com
    sa-east-1:
      EC2Principal: ec2.amazonaws.com
      ElasticBeanstalkPrincipal: elasticbeanstalk.amazonaws.com
    cn-north-1:
      EC2Principal: ec2.amazonaws.com.cn
      ElasticBeanstalkPrincipal: elasticbeanstalk.amazonaws.com.cn
    cn-northwest-1:
      EC2Principal: ec2.amazonaws.com.cn
      ElasticBeanstalkPrincipal: elasticbeanstalk.amazonaws.com.cn
    eu-central-1:
      EC2Principal: ec2.amazonaws.com
      ElasticBeanstalkPrincipal: elasticbeanstalk.amazonaws.com

Resources:

  AlertStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplateBucket}/${TemplateKey}/alert.cfn.yml
      Parameters:
        ProjectName: !Ref ProjectName
        BranchName: !Ref BranchName
        Environment: !Ref Environment
        Email: !Ref AlertEmail
        FallbackEmail: !Ref AlertFallbackEmaill

  VpcStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplateBucket}/${TemplateKey}/vpc.cfn.yml
      Parameters:
        ProjectName: !Ref ProjectName
        BranchName: !Ref BranchName
        Environment: !Ref Environment
        VpcCidr: !Ref VpcCidr

  S3BucketStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplateBucket}/${TemplateKey}/s3-bucket.cfn.yml
      Parameters:
        BucketName: !Ref S3BucketName
        Access: 'CloudFrontRead'
        Versioning: 'false'
        NoncurrentVersionExpirationInDays: '0'
        Encryption: 'false'

  S3EndpointStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplateBucket}/${TemplateKey}/s3-endpoint.cfn.yml
      Parameters:
        ParentVPCStack: !GetAtt VpcStack.Outputs.StackName
        ParentS3BucketStack: !GetAtt S3BucketStack.Outputs.StackName

  DatabaseStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplateBucket}/${TemplateKey}/aurora-mysql.cfn.yml
      Parameters:
        ParentVPCStack: !GetAtt VpcStack.Outputs.StackName
        ParentAlertStack: !GetAtt AlertStack.Outputs.StackName
        ProjectName: !Ref ProjectName
        BranchName: !Ref BranchName
        DBSnapshotIdentifier: !Ref DBSnapshot
        DBInstanceClass: !Ref DBInstanceType
        DBName: !Ref DBName
        DBMasterUsername: !Ref  DBUsername
        DBMasterUserPassword: !Ref DBPassword

  ServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: '/'
      RoleName: !Sub ${ProjectName}-ServiceRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - !FindInMap [Region2Principal, !Ref 'AWS::Region', EC2Principal]
            - !FindInMap [Region2Principal, !Ref 'AWS::Region', ElasticBeanstalkPrincipal]
          Action:
          - 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkEnhancedHealth'
        - 'arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkService'

  # IAM resources
  AppRole:
    Type: AWS::IAM::Role
    Properties:
      Path: '/'
      RoleName: !Sub ${ProjectName}-AppRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - !FindInMap [Region2Principal, !Ref 'AWS::Region', EC2Principal]
          Action:
          - 'sts:AssumeRole'

  AppPolicies:
    Type: AWS::IAM::Policy
    Properties:
      Roles:
      - !Ref AppRole
      PolicyName: !Sub ${ProjectName}-AppPolicies
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          NotAction: 'iam:*'
          Resource: '*'

  AppInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: '/'
      Roles:
      - !Ref AppRole
      InstanceProfileName: !Sub ${ProjectName}-AppInstanceProfile

  Application:
    Type: AWS::ElasticBeanstalk::Application
    Properties:
      ApplicationName: !Sub ${ProjectName}
      Description: AWS Elastic Beanstalk PHP Application

  ApplicationVersion:
    Type: AWS::ElasticBeanstalk::ApplicationVersion
    Properties:
      ApplicationName: !Ref Application
      Description: The initial version
      SourceBundle:
        S3Bucket: !Ref TemplateBucket
        S3Key: !Sub ${TemplateKey}/app-v0.1.0.zip

  ApplicationEnvironment:
    Type: AWS::ElasticBeanstalk::Environment
    Properties:
      EnvironmentName: !Sub ${ProjectName}-${Environment}
      ApplicationName: !Ref Application
      TemplateName: !Ref ConfigurationTemplate
      VersionLabel: !Ref ApplicationVersion
      Description: AWS Elastic Beanstalk Environment running PHP Application
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-Environment
      - Key: Project
        Value: !Ref ProjectName
      - Key: Branch
        Value: !Ref BranchName

  # The configuration template contains environment parameters such as those
  # that relate to the autoscaling group (e.g. size, triggers), placement of
  # resources in the VPC, load balancer setup, and environment variables
  ConfigurationTemplate:
    Type: AWS::ElasticBeanstalk::ConfigurationTemplate
    Properties:
      ApplicationName: !Ref Application
      SolutionStackName: !FindInMap [ PHPVersionMap, !Ref PHPVersion, 'stackName' ]
      OptionSettings:
      # AUTOSCALING OPTIONS
      - Namespace: 'aws:autoscaling:asg'
        OptionName: MinSize
        Value: !If [IsProduction, '2', '1']

      - Namespace: 'aws:autoscaling:asg'
        OptionName: MaxSize
        Value: !If [IsProduction, '4', '2']

      # LAUNCHCONFIGURATION OPTIONS
      - Namespace: 'aws:autoscaling:launchconfiguration'
        OptionName: EC2KeyName
        Value: !Ref AppKeyName

      - Namespace: 'aws:autoscaling:launchconfiguration'
        OptionName: IamInstanceProfile
        Value: !Ref AppInstanceProfile

      - Namespace: 'aws:autoscaling:launchconfiguration'
        OptionName: InstanceType
        Value: !Ref AppInstanceType

      - Namespace: 'aws:autoscaling:launchconfiguration'
        OptionName: SecurityGroups
        Value: !GetAtt VpcStack.Outputs.ClientSecurityGroup

      - Namespace: 'aws:autoscaling:launchconfiguration'
        OptionName: SSHSourceRestriction
        Value: !Sub tcp,22,22,${SSHFrom}

      # AUTOSCALING TRIGGER
      - Namespace: 'aws:autoscaling:trigger'
        OptionName: MeasureName
        Value: CPUUtilization

      - Namespace: 'aws:autoscaling:trigger'
        OptionName: Unit
        Value: Percent

      - Namespace: 'aws:autoscaling:trigger'
        OptionName: UpperThreshold
        Value: '80'

      - Namespace: 'aws:autoscaling:trigger'
        OptionName: LowerThreshold
        Value: '40'

      # ROLLING UPDATE OPTIONS
      - Namespace: 'aws:autoscaling:updatepolicy:rollingupdate'
        OptionName: RollingUpdateEnabled
        Value: 'true'

      - Namespace: 'aws:autoscaling:updatepolicy:rollingupdate'
        OptionName: RollingUpdateType
        Value: Health

      - Namespace: 'aws:autoscaling:updatepolicy:rollingupdate'
        OptionName: Timeout
        Value: PT30M

      # VPC OPTIONS (PLACEMENT OF RESOURCES IN SUBNETS)
      - Namespace: 'aws:ec2:vpc'
        OptionName: VPCId
        Value: !GetAtt VpcStack.Outputs.VpcId

      - Namespace: 'aws:ec2:vpc'
        OptionName: Subnets
        Value: !GetAtt VpcStack.Outputs.PrivateSubnets

      - Namespace: 'aws:ec2:vpc'
        OptionName: ELBSubnets
        Value: !GetAtt VpcStack.Outputs.PublicSubnets

      - Namespace: 'aws:ec2:vpc'
        OptionName: ELBScheme
        Value: public

      - Namespace: 'aws:ec2:vpc'
        OptionName: AssociatePublicIpAddress
        Value: 'false'

      # CLOUDWATCH LOGS OPTIONS
      - Namespace: 'aws:elasticbeanstalk:cloudwatch:logs'
        OptionName: StreamLogs
        Value: 'true'

      - Namespace: 'aws:elasticbeanstalk:cloudwatch:logs'
        OptionName: DeleteOnTerminate
        Value: 'false'

      - Namespace: 'aws:elasticbeanstalk:cloudwatch:logs'
        OptionName: RetentionInDays
        Value: !Ref LogsRetentionInDays

      # SNS TOPIC OPTIONS
      - Namespace: 'aws:elasticbeanstalk:sns:topics'
        OptionName: Notification Topic ARN
        Value: !GetAtt AlertStack.Outputs.TopicARN

      # PHP OPTIONS
      - Namespace: 'aws:elasticbeanstalk:container:php:phpini'
        OptionName: memory_limit
        Value: 256M

      # ENVIRONMENT OPTIONS
      - Namespace: 'aws:elasticbeanstalk:environment'
        OptionName: EnvironmentType
        Value: LoadBalanced

      - Namespace: 'aws:elasticbeanstalk:environment'
        OptionName: LoadBalancerType
        Value: application

      - Namespace: 'aws:elasticbeanstalk:environment'
        OptionName: ServiceRole
        Value: !Ref ServiceRole

      # LOAD BALANCER LISTENER RULE OPTIONS
      - Namespace: 'aws:elbv2:listenerrule:default'
        OptionName: PathPatterns
        Value: /*

      - Namespace: 'aws:elbv2:listenerrule:default'
        OptionName: Process
        Value: default

      # LOAD BALANCER LISTENER OPTIONS
      - Namespace: 'aws:elbv2:listener:default'
        OptionName: ListenerEnabled
        Value: 'true'

      - Namespace: 'aws:elbv2:listener:default'
        OptionName: Protocol
        Value: 'HTTP'

      - Namespace: 'aws:elbv2:listener:default'
        OptionName: 'Rules'
        Value: 'default'

      - Namespace: 'aws:elbv2:listener:default'
        OptionName: DefaultProcess
        Value: 'default'

      # ELASTICBEANSTALK APPLICATION OPTIONS
      - Namespace: 'aws:elasticbeanstalk:application'
        OptionName: Application Healthcheck URL
        Value: /

      # APPLICATION ENVIRONMENT VARIABLES
      - Namespace: 'aws:elasticbeanstalk:application:environment'
        OptionName: APP_NAME
        Value: !Ref ProjectName

      - Namespace: 'aws:elasticbeanstalk:application:environment'
        OptionName: APP_ENV
        Value: !If [ IsProduction, 'production', 'staging' ]

      - Namespace: 'aws:elasticbeanstalk:application:environment'
        OptionName: APP_DEBUG
        Value: !If [ IsProduction, 'false', 'true' ]

      - Namespace: 'aws:elasticbeanstalk:application:environment'
        OptionName: APP_LOG_LEVEL
        Value: !If [ IsProduction, 'warning', 'debug' ]

      - Namespace: 'aws:elasticbeanstalk:application:environment'
        OptionName: AWS_REGION
        Value: !Ref AWS::Region

      - Namespace: 'aws:elasticbeanstalk:application:environment'
        OptionName: AWS_VPC_IP
        Value: !GetAtt VpcStack.Outputs.VpcCidr

      - Namespace: 'aws:elasticbeanstalk:application:environment'
        OptionName: AWS_BUCKET
        Value: !GetAtt S3BucketStack.Outputs.BucketName

      - Namespace: 'aws:elasticbeanstalk:application:environment'
        OptionName: AWS_URL
        Value: !Sub
        - https://${S3BucketDomainName}
        - S3BucketDomainName: !GetAtt S3BucketStack.Outputs.BucketDomainName

      - Namespace: 'aws:elasticbeanstalk:application:environment'
        OptionName: FILESYSTEM_DRIVER
        Value: 'S3'

      - Namespace: 'aws:elasticbeanstalk:application:environment'
        OptionName: DB_CONNECTION
        Value: 'mysql'

      - Namespace: 'aws:elasticbeanstalk:application:environment'
        OptionName: DB_HOST
        Value: !GetAtt DatabaseStack.Outputs.DNSName

      - Namespace: 'aws:elasticbeanstalk:application:environment'
        OptionName: DB_READ_HOST
        Value: !GetAtt DatabaseStack.Outputs.ReadDNSName

      - Namespace: 'aws:elasticbeanstalk:application:environment'
        OptionName: DB_PORT
        Value: '3306'

      - Namespace: 'aws:elasticbeanstalk:application:environment'
        OptionName: DB_DATABASE
        Value: !Ref DBName

      - Namespace: 'aws:elasticbeanstalk:application:environment'
        OptionName: DB_USERNAME
        Value: !Ref DBUsername

      - Namespace: 'aws:elasticbeanstalk:application:environment'
        OptionName: DB_PASSWORD
        Value: !Ref DBPassword

Outputs:

  StackName:
    Description: Stack Name
    Value: !Ref AWS::StackName

  EnvironmentURL:
    Description: Environment URL
    Value: !GetAtt ApplicationEnvironment.EndpointURL
    Export:
      Name: !Sub ${AWS::StackName}-EnvironmentURL

  EnvironmentName:
    Description: Environment Name
    Value: !Sub ${ProjectName}-${Environment}
    Export:
      Name: !Sub ${AWS::StackName}-EnvironmentName
